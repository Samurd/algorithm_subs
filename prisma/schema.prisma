// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}


model User {
  id String @id @default(uuid())
  name String?
  email String @unique
  image String?
  emailVerified DateTime?
  subscription Subcriptions?
  accounts      Account[]
  sessions      Session[]
  createAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}




// Subscriptions User's


enum SubscriptionFrequency {
  monthly
  yearly
}


model Subcriptions {
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @unique
  subscriptionPlan SubscriptionPlans @relation(fields: [subscriptionPlanId], references: [id], onDelete: Cascade)
  subscriptionPlanId Int
  frequency SubscriptionFrequency @default(monthly)
  isActive Boolean @default(true)
  renewsAt DateTime?
  startsAt DateTime @default(now())
  endsAt DateTime?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


// Plans


enum TypeSubcription {
  free
  pro
}


model SubscriptionPlans {
  id Int @id @default(autoincrement())
  productId String?
  variants String[]
  typeSubcription TypeSubcription @unique @default(free)
  name String 
  description String
  priceMonthly Float @default(0)
  priceYearly Float @default(0)
  hrefMonthly String? 
  hrefYearly String?
  features String[]
  mostPopular Boolean @default(false)
  isActive Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  subscription Subcriptions[]
}
